package me.fullpotato.badlandscaves.CustomItems;

import me.fullpotato.badlandscaves.AlternateDimensions.PregenerateDimensions;
import me.fullpotato.badlandscaves.BadlandsCaves;
import me.fullpotato.badlandscaves.Util.EnchantmentStorage;
import me.fullpotato.badlandscaves.Util.ItemBuilder;
import net.md_5.bungee.api.ChatColor;
import org.bukkit.Color;
import org.bukkit.Material;
import org.bukkit.NamespacedKey;
import org.bukkit.attribute.Attribute;
import org.bukkit.attribute.AttributeModifier;
import org.bukkit.enchantments.Enchantment;
import org.bukkit.inventory.EquipmentSlot;
import org.bukkit.inventory.ItemFlag;
import org.bukkit.inventory.ItemStack;
import org.bukkit.persistence.PersistentDataType;
import org.bukkit.potion.PotionData;
import org.bukkit.potion.PotionType;

import java.util.HashMap;
import java.util.Map;
import java.util.UUID;

public class CustomItemManager {
    private final BadlandsCaves plugin;
    private final EnchantmentStorage enchantmentStorage;
    private final PregenerateDimensions pregenerateDimensions;
    private final Map<CustomItem, ItemStack> itemMap = new HashMap<>();

    public static final String[] uuids = {
            "2018ae4d-9bf8-47b9-8c1f-3107007afeab",
            "a552bcbf-413c-493d-a2c2-cbcbd0f008cb",
            "f3eadd40-8340-4263-ae9e-0227caa026a8",
            "be191adc-6e88-44eb-98a8-42a383a40025",
            "64bea4b3-5954-4126-bf3e-16f52a3ceec2",
            "df61c558-00a9-4d37-ac7b-2dc1019372aa",
            "af488f76-7285-4654-9602-1d2f5458e859",
            "80c07619-854b-491d-853a-d977bef56aef",
            "8ce28112-3ae0-4463-9040-704098144f56",
            "d9d3e533-d221-45a2-9472-30a8b61eae16",
            "dd867378-1e59-452a-baa5-d0afcc9e7daf",
            "683fc3b5-39aa-4fa5-8d3c-864bd3fd2f10",
            "f6cfed15-13f7-4bc2-92ef-9cf61120d639",
            "91464f55-dda0-469c-b3ae-83a5219a1d3c",
            "f1dd258b-30ac-45a5-b3df-f9354c37f0ea",
            "58d14695-8f06-4aea-a3ca-80a7c779a844",
            "18d43596-3a73-4721-8af2-2e3fbab23de3",
            "21ef0e4b-1368-4e0a-b666-35330c86e696",
            "043267a0-1318-4b45-a5df-0d11ee81316a",
            "024506c6-4fd2-40c0-897b-60007b8af856",
            "bfcabfa7-0489-4cfa-99de-285a38944844",
            "c3413cb5-7be7-4db2-be71-987083ef0dd6",
            "a76e8e2e-ce10-454f-bdc8-958a034bd111",
            "f89fb0e9-20c6-4dae-92ed-2bd0d89bb09f",
            "8006c980-a7a8-4e35-a2be-3d788313ccc2",
            "540644ec-e5a7-40fe-8ad4-fb19ef76d710",
            "ee070dcc-335c-4d34-9e69-33c6dd9feb7c",
            "60fe4d87-4c13-4e41-ba3a-c64157a86296",
            "4886b1aa-cb5f-435e-acc6-bfcf622ca990",
            "b8e8caa9-da29-4f8c-b506-e1dba9300ba9",
            "2a91a5cc-1db3-4b5b-8d73-5f2f51751ebd",
            "d62766f8-2642-4db1-89e4-8ce666b2a23e",
            "6e016348-03e1-4335-a0dd-b3da1decde5c",
            "58dd69e9-2967-4925-8b73-12bcc946972f",
            "77151592-b786-4024-b245-d14f023a0ec4",
            "1e5339e9-7496-434a-9cad-bb6fabf1dc7a",
            "81e69806-43c7-4354-9275-27f3629e5c98",
            "de3fca18-8c87-43ad-9f4b-1c46a7acc30d",
            "1c12b8a1-118c-4647-a71d-86756cf148a3",
            "fb139a0c-6507-48f4-88ed-07044d3abd94",
            "ac155a09-9905-42a9-a240-58221f07cbb2",
            "f332ed08-1974-4dd3-9a0f-d7a6c1edbf06",
    };

    public CustomItemManager(BadlandsCaves plugin, EnchantmentStorage enchantmentStorage, PregenerateDimensions pregenerateDimensions) {
        this.plugin = plugin;
        this.enchantmentStorage = enchantmentStorage;
        this.pregenerateDimensions = pregenerateDimensions;
        fillMap();
    }

    private void fillMap() {
        itemMap.put(CustomItem.STARTER_SAPLING, new ItemBuilder(Material.OAK_SAPLING).setName("§8[§aStarter Sapling§8]").addItemFlags(ItemFlag.HIDE_ENCHANTS).addEnchant(Enchantment.DURABILITY, 1, false).build());
        itemMap.put(CustomItem.TOXIC_WATER, new ItemBuilder(Material.POTION).setName("§2Toxic Water Bottle").setLore("§8Leaves a disgusting taste in your mouth").addItemFlags(ItemFlag.HIDE_POTION_EFFECTS).setBasePotionData(new PotionData(PotionType.WATER)).setPotionColor(Color.fromRGB(55, 117, 89)).build());
        itemMap.put(CustomItem.PURIFIED_WATER, new ItemBuilder(Material.POTION).setName("§3Purified Water Bottle").setLore("§7Light and refreshing.").addItemFlags(ItemFlag.HIDE_POTION_EFFECTS).setBasePotionData(new PotionData(PotionType.UNCRAFTABLE)).setPotionColor(Color.fromRGB(76, 162, 255)).build());
        itemMap.put(CustomItem.CANTEEN, new ItemBuilder(Material.POTION).setName(ChatColor.WHITE + "Canteen").setLore(ChatColor.GRAY + "Empty").setCustomModelData(180).addItemFlags(ItemFlag.HIDE_POTION_EFFECTS).setPersistentData(new NamespacedKey(this.plugin, "is_canteen"), PersistentDataType.BYTE, (byte) 1).setPersistentData(new NamespacedKey(this.plugin, "canteen_liquid"), PersistentDataType.STRING, "EMPTY").setPersistentData(new NamespacedKey(this.plugin, "canteen_amount"), PersistentDataType.INTEGER, 0).setBasePotionData(new PotionData(PotionType.UNCRAFTABLE)).build());
        itemMap.put(CustomItem.CANTEEN_FILL_PLACEHOLDER, new ItemBuilder(Material.COMMAND_BLOCK).setName(ChatColor.WHITE + "Fill Canteen").setCustomModelData(181).build());
        itemMap.put(CustomItem.FISHING_CRATE, new ItemBuilder(Material.BARREL).setName("§2Fishing Crate").setLore("§7Right click to open.", "§2Contains Prehardmode Loot.").addItemFlags(ItemFlag.HIDE_ENCHANTS).addEnchant(Enchantment.DURABILITY, 1, false).build());
        itemMap.put(CustomItem.FISHING_CRATE_HARDMODE, new ItemBuilder(Material.BARREL).setName("§6Fishing Crate").setLore("§7Right click to open.", "§6Contains Hardmode Loot.").addItemFlags(ItemFlag.HIDE_ENCHANTS).addEnchant(Enchantment.DURABILITY, 1, false).build());
        itemMap.put(CustomItem.ANTIDOTE, new ItemBuilder(Material.POTION).setName("§dAntidote Bottle").setLore("§7Purges the toxins from your body.").addItemFlags(ItemFlag.HIDE_ENCHANTS, ItemFlag.HIDE_POTION_EFFECTS).addEnchant(Enchantment.DURABILITY, 50, true).setBasePotionData(new PotionData(PotionType.UNCRAFTABLE)).setPotionColor(Color.fromRGB(224, 74, 188)).build());
        itemMap.put(CustomItem.MANA_POTION, new ItemBuilder(Material.POTION).setName("§9Mana Potion").setLore("§7Recovers §9100 §7Mana points.").addItemFlags(ItemFlag.HIDE_POTION_EFFECTS, ItemFlag.HIDE_ENCHANTS).addEnchant(Enchantment.DURABILITY, 100, true).setBasePotionData(new PotionData(PotionType.UNCRAFTABLE)).setPotionColor(Color.fromRGB(54, 137, 255)).build());
        itemMap.put(CustomItem.PURGE_ESSENCE, new ItemBuilder(Material.COMMAND_BLOCK).setName("§dEssence of Purging").setCustomModelData(101).build());
        itemMap.put(CustomItem.HELL_ESSENCE, new ItemBuilder(Material.COMMAND_BLOCK).setName("§cEssence of Hell").setCustomModelData(105).build());
        itemMap.put(CustomItem.MAGIC_ESSENCE, new ItemBuilder(Material.COMMAND_BLOCK).setName("§9Essence of Magic").setCustomModelData(108).build());
        itemMap.put(CustomItem.DISPLACE, new ItemBuilder(Material.KNOWLEDGE_BOOK).setName("§dDisplace").setCustomModelData(103).build());
        itemMap.put(CustomItem.WITHDRAW, new ItemBuilder(Material.KNOWLEDGE_BOOK).setName("§7Withdraw").setCustomModelData(104).build());
        itemMap.put(CustomItem.ENHANCED_EYES, new ItemBuilder(Material.KNOWLEDGE_BOOK).setName("§9Enhanced Eyes").setCustomModelData(106).build());
        itemMap.put(CustomItem.POSSESS, new ItemBuilder(Material.KNOWLEDGE_BOOK).setName("§2Possession").setCustomModelData(107).build());
        itemMap.put(CustomItem.TINY_BLAZE_POWDER, new ItemBuilder(Material.STRUCTURE_BLOCK, 9).setName(ChatColor.WHITE + "Tiny Pile of Blaze Powder").setCustomModelData(100).build());
        itemMap.put(CustomItem.TAINTED_POWDER, new ItemBuilder(Material.COMMAND_BLOCK, 2).setName("§2Tainted Powder").setLore("§7Right click to throw.").setCustomModelData(102).build());
        itemMap.put(CustomItem.ZOMBIE_SOUL, new ItemBuilder(Material.COMMAND_BLOCK).setName(ChatColor.WHITE + "Soul of Decay").setCustomModelData(109).build());
        itemMap.put(CustomItem.CREEPER_SOUL, new ItemBuilder(Material.COMMAND_BLOCK).setName(ChatColor.WHITE + "Soul of Destruction").setCustomModelData(110).build());
        itemMap.put(CustomItem.SKELETON_SOUL, new ItemBuilder(Material.COMMAND_BLOCK).setName(ChatColor.WHITE + "Soul of War").setCustomModelData(111).build());
        itemMap.put(CustomItem.SPIDER_SOUL, new ItemBuilder(Material.COMMAND_BLOCK).setName(ChatColor.WHITE + "Soul of Arachnid").setCustomModelData(112).build());
        itemMap.put(CustomItem.PIGZOMBIE_SOUL, new ItemBuilder(Material.COMMAND_BLOCK).setName(ChatColor.WHITE + "Soul of Hellish Decay").setCustomModelData(113).build());
        itemMap.put(CustomItem.GHAST_SOUL, new ItemBuilder(Material.COMMAND_BLOCK).setName(ChatColor.WHITE + "Soul of Suffering").setCustomModelData(114).build());
        itemMap.put(CustomItem.SILVERFISH_SOUL, new ItemBuilder(Material.COMMAND_BLOCK).setName(ChatColor.WHITE + "Soul of Parasite").setCustomModelData(115).build());
        itemMap.put(CustomItem.WITCH_SOUL, new ItemBuilder(Material.COMMAND_BLOCK).setName(ChatColor.WHITE + "Soul of Supernatural").setCustomModelData(116).build());
        itemMap.put(CustomItem.PHANTOM_SOUL, new ItemBuilder(Material.COMMAND_BLOCK).setName(ChatColor.WHITE + "Soul of Insomnia").setCustomModelData(117).build());
        itemMap.put(CustomItem.MERGED_SOULS, new ItemBuilder(Material.COMMAND_BLOCK).setName("§9§k%§r§d§lMerged Souls§r§9§k%").setLore(ChatColor.GRAY + "If you listen closely, you can hear the screams.").setCustomModelData(118).build());
        itemMap.put(CustomItem.SOUL_LANTERN, new ItemBuilder(Material.KNOWLEDGE_BOOK).setName(ChatColor.WHITE.toString() + ChatColor.of("#2ac9cf") + "Soul Lantern").setLore(ChatColor.BLUE.toString() + ChatColor.BOLD + "Right Click" + ChatColor.RESET.toString() + ChatColor.GRAY + " to open.").setCustomModelData(182).setPersistentData(new NamespacedKey(this.plugin, "is_soul_lantern"), PersistentDataType.BYTE, (byte) 1).setPersistentData(new NamespacedKey(this.plugin, "soul_lantern_items"), PersistentDataType.STRING, "").build());
        itemMap.put(CustomItem.SOUL_CRYSTAL_INCOMPLETE, new ItemBuilder(Material.KNOWLEDGE_BOOK).setName("§3§k%§r§5§lIncomplete Soul Crystal§r§3§k%").setLore("§9§lRight Click§r§7 to collect your own soul. Be prepared to fight.", "§7Requires a human soul to complete.", "§7Uses Left: 9").setCustomModelData(119).build());
        itemMap.put(CustomItem.SOUL_CRYSTAL, new ItemBuilder(Material.KNOWLEDGE_BOOK).setName("§b§k%§r§d§lSoul Crystal§r§b§k%").setLore("§9§lRight Click§r§7 to use.", "§7Can be used as a sacrifice to enter Descension§r§7.", "§7Uses Left: 10").setCustomModelData(120).build());
        itemMap.put(CustomItem.RUNE, new ItemBuilder(Material.KNOWLEDGE_BOOK).setName("§8§lRune").setLore("§9§lRight Click§r§7 to use.", "§7Used to upgrade Supernatural Abilities.", "§70 / 1 §dMerged Souls", "§70 / 9 §9Essences of Magic").setCustomModelData(121).build());
        itemMap.put(CustomItem.CHARGED_RUNE, new ItemBuilder(Material.KNOWLEDGE_BOOK).setName("§d§k%§r§8§lRune§r§9§k%").setLore("§9§lRight Click§r§7 to upgrade Supernatural Abilities.").setCustomModelData(122).build());
        itemMap.put(CustomItem.VOLTSHOCK_BATTERY, new ItemBuilder(Material.COMMAND_BLOCK).setName(ChatColor.WHITE + "Battery").setCustomModelData(125).build());
        itemMap.put(CustomItem.VOLTSHOCK_SHOCKER, new ItemBuilder(Material.COMMAND_BLOCK).setName(ChatColor.WHITE + "Shocker").setCustomModelData(126).build());
        itemMap.put(CustomItem.VOLTSHOCK_PLACEHOLDER, new ItemBuilder(Material.COMMAND_BLOCK).setName(ChatColor.WHITE + "Voltshock Sword").setCustomModelData(136).build());
        itemMap.put(CustomItem.VOLTSHOCK_SWORD_CHARGE_PLACEHOLDER, new ItemBuilder(Material.COMMAND_BLOCK).setName(ChatColor.WHITE + "Charge Voltshock Sword").setCustomModelData(137).build());
        itemMap.put(CustomItem.VOLTSHOCK_ARROW, new ItemBuilder(Material.ARROW).setName("§3Voltshock Arrow").setCustomModelData(131).build());
        itemMap.put(CustomItem.CORROSIVE_SUBSTANCE, new ItemBuilder(Material.COMMAND_BLOCK).setName("§2Corrosive Substance").setCustomModelData(129).build());
        itemMap.put(CustomItem.CORROSIVE_PLACEHOLDER, new ItemBuilder(Material.COMMAND_BLOCK).setName(ChatColor.WHITE + "Corrosive Sword").setCustomModelData(138).build());
        itemMap.put(CustomItem.CORROSIVE_ARROW, new ItemBuilder(Material.ARROW).setName("§2Corrosive Arrow").setCustomModelData(132).build());
        itemMap.put(CustomItem.CHAMBER_MAGMA_KEY, new ItemBuilder(Material.COMMAND_BLOCK).setName("§cMagma Key").setCustomModelData(133).build());
        itemMap.put(CustomItem.CHAMBER_GLOWSTONE_KEY, new ItemBuilder(Material.COMMAND_BLOCK).setName("§6Glowstone Key").setCustomModelData(134).build());
        itemMap.put(CustomItem.CHAMBER_SOULSAND_KEY, new ItemBuilder(Material.COMMAND_BLOCK).setName("§8Soul Sand Key").setCustomModelData(135).build());
        itemMap.put(CustomItem.BLESSED_APPLE, new ItemBuilder(Material.GOLDEN_APPLE).setName("§bBlessed Apple").setCustomModelData(139).build());
        itemMap.put(CustomItem.ENCHANTED_BLESSED_APPLE, new ItemBuilder(Material.ENCHANTED_GOLDEN_APPLE).setName("§dEnchanted Blessed Apple").setCustomModelData(140).build());
        itemMap.put(CustomItem.STONE_SHIELD, new ItemBuilder(Material.SHIELD).setName(ChatColor.WHITE + "Stone Shield").setCustomModelData(141).addEnchant(Enchantment.DURABILITY, 4, true).addAttributeModifier(Attribute.GENERIC_MOVEMENT_SPEED, new AttributeModifier(UUID.fromString(uuids[0]), "Shield Speed Modifier", -0.1, AttributeModifier.Operation.MULTIPLY_SCALAR_1, EquipmentSlot.OFF_HAND)).addAttributeModifier(Attribute.GENERIC_MOVEMENT_SPEED, new AttributeModifier(UUID.fromString(uuids[1]), "Shield Speed Modifier", -0.1, AttributeModifier.Operation.MULTIPLY_SCALAR_1, EquipmentSlot.HAND)).build());
        itemMap.put(CustomItem.IRON_SHIELD, new ItemBuilder(Material.SHIELD).setName(ChatColor.WHITE + "Iron Shield").setCustomModelData(142).addEnchant(Enchantment.DURABILITY, 5, true).addAttributeModifier(Attribute.GENERIC_MOVEMENT_SPEED, new AttributeModifier(UUID.fromString(uuids[2]), "Shield Speed Modifier", -0.15, AttributeModifier.Operation.MULTIPLY_SCALAR_1, EquipmentSlot.OFF_HAND)).addAttributeModifier(Attribute.GENERIC_MOVEMENT_SPEED, new AttributeModifier(UUID.fromString(uuids[3]), "Shield Speed Modifier", -0.15, AttributeModifier.Operation.MULTIPLY_SCALAR_1, EquipmentSlot.HAND)).build());
        itemMap.put(CustomItem.DIAMOND_SHIELD, new ItemBuilder(Material.SHIELD).setName(ChatColor.WHITE + "Diamond Shield").setCustomModelData(144).addEnchant(Enchantment.DURABILITY, 6, true).addAttributeModifier(Attribute.GENERIC_MOVEMENT_SPEED, new AttributeModifier(UUID.fromString(uuids[4]), "Shield Speed Modifier", -0.2, AttributeModifier.Operation.MULTIPLY_SCALAR_1, EquipmentSlot.OFF_HAND)).addAttributeModifier(Attribute.GENERIC_MOVEMENT_SPEED, new AttributeModifier(UUID.fromString(uuids[5]), "Shield Speed Modifier", -0.2, AttributeModifier.Operation.MULTIPLY_SCALAR_1, EquipmentSlot.HAND)).build());
        itemMap.put(CustomItem.NETHERITE_SHIELD, new ItemBuilder(Material.SHIELD).setName(ChatColor.WHITE + "Netherite Shield").setCustomModelData(178).addEnchant(Enchantment.DURABILITY, 7, true).addAttributeModifier(Attribute.GENERIC_MOVEMENT_SPEED, new AttributeModifier(UUID.fromString(uuids[16]), "Shield Speed Modifier", -0.2, AttributeModifier.Operation.MULTIPLY_SCALAR_1, EquipmentSlot.OFF_HAND)).addAttributeModifier(Attribute.GENERIC_MOVEMENT_SPEED, new AttributeModifier(UUID.fromString(uuids[17]), "Shield Speed Modifier", -0.2, AttributeModifier.Operation.MULTIPLY_SCALAR_1, EquipmentSlot.HAND)).build());
        itemMap.put(CustomItem.RECALL_POTION, new ItemBuilder(Material.POTION).setName("§eRecall Potion").setLore("§7Brings you home.", "§cDo not move when using!").addItemFlags(ItemFlag.HIDE_ENCHANTS, ItemFlag.HIDE_POTION_EFFECTS).addEnchant(Enchantment.DURABILITY, 50, true).setBasePotionData(new PotionData(PotionType.UNCRAFTABLE)).setPotionColor(Color.fromRGB(255, 255, 0)).build());
        itemMap.put(CustomItem.TITANIUM_FRAGMENT, new ItemBuilder(Material.COMMAND_BLOCK).setName("§bTitanium Fragment").setCustomModelData(143).build());
        itemMap.put(CustomItem.TITANIUM_INGOT, new ItemBuilder(Material.COMMAND_BLOCK).setName("§bTitanium Ingot").setCustomModelData(144).build());
        itemMap.put(CustomItem.REINFORCED_TITANIUM, new ItemBuilder(Material.COMMAND_BLOCK).setName("§eReinforced Titanium Ingot").setCustomModelData(176).build());
        itemMap.put(CustomItem.TITANIUM_ROD, new ItemBuilder(Material.COMMAND_BLOCK).setName("§bTitanium Rod").setCustomModelData(166).build());
        itemMap.put(CustomItem.BINDING, new ItemBuilder(Material.COMMAND_BLOCK).setName(ChatColor.WHITE + "Binding").setCustomModelData(145).build());
        itemMap.put(CustomItem.GOLDEN_CABLE, new ItemBuilder(Material.COMMAND_BLOCK).setName(ChatColor.WHITE + "Golden Cable").setCustomModelData(146).build());
        itemMap.put(CustomItem.NETHER_STAR_FRAGMENT, new ItemBuilder(Material.COMMAND_BLOCK).setName("§eNether Star Fragment").setCustomModelData(147).addItemFlags(ItemFlag.HIDE_ENCHANTS).addEnchant(Enchantment.DURABILITY, 1, true).build());
        itemMap.put(CustomItem.STARLIGHT_CIRCUIT, new ItemBuilder(Material.STRUCTURE_BLOCK).setName("§eStarlight Circuit").setCustomModelData(148).build());
        itemMap.put(CustomItem.STARLIGHT_BATTERY, new ItemBuilder(Material.STRUCTURE_BLOCK).setName("§eStarlight Battery").setCustomModelData(149).build());
        itemMap.put(CustomItem.STARLIGHT_MODULE, new ItemBuilder(Material.STRUCTURE_BLOCK).setName("§eStarlight Module").setCustomModelData(150).build());
        itemMap.put(CustomItem.PHOTON_EMITTER, new ItemBuilder(Material.STRUCTURE_BLOCK).setName("§ePhoton Emitter").setCustomModelData(167).build());
        itemMap.put(CustomItem.WAVELENGTH_DISRUPTOR, new ItemBuilder(Material.STRUCTURE_BLOCK).setName("§eWavelength Disruptor").setCustomModelData(179).build());
        itemMap.put(CustomItem.SILENCER, new ItemBuilder(Material.STRUCTURE_BLOCK).setName(ChatColor.DARK_PURPLE + "Silencer").build());
        itemMap.put(CustomItem.FOREVER_FISH, new ItemBuilder(Material.COOKED_COD).setName("§6Forever Fish").setLore("§7Give a man a fish, feed him for a day.", "§7Give him a Forever Fish, feed him for a lifetime.").addItemFlags(ItemFlag.HIDE_ENCHANTS).addEnchant(Enchantment.DURABILITY, 1, true).build());
        itemMap.put(CustomItem.ENERGIUM, new ItemBuilder(Material.COMMAND_BLOCK).setName("§cEnergium").setCustomModelData(155).build());
        itemMap.put(CustomItem.ENERGY_CORE, new ItemBuilder(Material.KNOWLEDGE_BOOK).setName("§bEnergy Core").setLore("§7Charge: 0").setCustomModelData(156).setPersistentData(new NamespacedKey(this.plugin, "energy_core_charge"), PersistentDataType.INTEGER, 0).setPersistentData(new NamespacedKey(this.plugin, "is_energy_core"), PersistentDataType.BYTE, (byte) 1).build());
        itemMap.put(CustomItem.STARLIGHT_CHARGE_PLACEHOLDER, new ItemBuilder(Material.COMMAND_BLOCK).setName(ChatColor.WHITE + "Charge Starlight Armor").setCustomModelData(157).build());
        itemMap.put(CustomItem.VOIDMATTER, new ItemBuilder(Material.STRUCTURE_BLOCK).setName("§5Voidmatter").setCustomModelData(158).build());
        itemMap.put(CustomItem.VOIDMATTER_STICK, new ItemBuilder(Material.COMMAND_BLOCK).setName("§5Void Stick").setCustomModelData(173).build());
        itemMap.put(CustomItem.VOIDMATTER_STRING, new ItemBuilder(Material.STRUCTURE_BLOCK).setName("§5Void String").setCustomModelData(174).build());
        itemMap.put(CustomItem.VOIDMATTER_REPAIR_PLACEHOLDER, new ItemBuilder(Material.COMMAND_BLOCK).setName(ChatColor.RESET + "Repair Voidmatter Items").setCustomModelData(238).build());
        itemMap.put(CustomItem.TOTEM_OF_PRESERVATION, new ItemBuilder(Material.KNOWLEDGE_BOOK).setName(ChatColor.RED + "Totem of Preservation").setCustomModelData(183).build());
        itemMap.put(CustomItem.TREASURE_GEAR_VOUCHER, new ItemBuilder(Material.PAPER).setName(ChatColor.WHITE + "Treasure Gear Voucher").build());
        itemMap.put(CustomItem.HALLOWED_CHAMBERS_TREASURE_BAG, new ItemBuilder(Material.COMMAND_BLOCK).setName(ChatColor.RED + "Hallowed Chambers Treasure Bag").setCustomModelData(191).build());
        itemMap.put(CustomItem.NEBULITE_INSTALLER, new ItemBuilder(Material.KNOWLEDGE_BOOK).setName(ChatColor.WHITE.toString() + ChatColor.of("#0081fa") + "Nebulite Installer").setCustomModelData(192).build());
        itemMap.put(CustomItem.NEBULITE_CRATE, new ItemBuilder(Material.COMMAND_BLOCK).setName(ChatColor.RESET.toString() + ChatColor.of("#0081fa") + "Nebulite Crate").setCustomModelData(233).build());
        itemMap.put(CustomItem.NEBULITE_ENERGY_STORAGE, new ItemBuilder(Material.KNOWLEDGE_BOOK).setName(ChatColor.WHITE.toString() + ChatColor.of("#ffe62b") + "Energy Storage").setLore(ChatColor.RESET.toString() + ChatColor.BOLD + ChatColor.of("#0081fa") + "Nebulite", ChatColor.GRAY + "+100% Max Charge", ChatColor.GRAY + "Can be used on All Starlight Items.").setCustomModelData(193).setPersistentData(new NamespacedKey(this.plugin, "is_nebulite"), PersistentDataType.BYTE, (byte) 1).build());
        itemMap.put(CustomItem.NEBULITE_CORRODING_LIGHTS, new ItemBuilder(Material.KNOWLEDGE_BOOK).setName(ChatColor.DARK_GREEN + "Corroding Lights").setLore(ChatColor.RESET.toString() + ChatColor.BOLD + ChatColor.of("#0081fa") + "Nebulite", ChatColor.GRAY + "Hits inflict Corrosion.", ChatColor.GRAY + "Can be used on Starlight Saber.", ChatColor.RED + "Mutually Exclusive with Jagged Lights.").setCustomModelData(194).setPersistentData(new NamespacedKey(this.plugin, "is_nebulite"), PersistentDataType.BYTE, (byte) 1).build());
        itemMap.put(CustomItem.NEBULITE_JAGGED_LIGHTS, new ItemBuilder(Material.KNOWLEDGE_BOOK).setName(ChatColor.RED + "Jagged Lights").setLore(ChatColor.RESET.toString() + ChatColor.BOLD + ChatColor.of("#0081fa") + "Nebulite", ChatColor.GRAY + "Hits inflict Bleeding.", ChatColor.GRAY + "Can be used on Starlight Saber.", ChatColor.RED + "Mutually Exclusive with Corroding Lights.").setCustomModelData(195).setPersistentData(new NamespacedKey(this.plugin, "is_nebulite"), PersistentDataType.BYTE, (byte) 1).build());
        itemMap.put(CustomItem.NEBULITE_FLURRYING_SWINGS, new ItemBuilder(Material.KNOWLEDGE_BOOK).setName(ChatColor.AQUA + "Flurrying Swings").setLore(ChatColor.RESET.toString() + ChatColor.BOLD + ChatColor.of("#0081fa") + "Nebulite", ChatColor.GRAY + "+0.5 Attack Speed", ChatColor.GRAY + "-3 Sharpness", ChatColor.GRAY + "Can be used on Starlight Saber.", ChatColor.RED + "Mutually Exclusive with Decisive Slice.").setCustomModelData(196).setPersistentData(new NamespacedKey(this.plugin, "is_nebulite"), PersistentDataType.BYTE, (byte) 1).build());
        itemMap.put(CustomItem.NEBULITE_DECISIVE_SLICE, new ItemBuilder(Material.KNOWLEDGE_BOOK).setName(ChatColor.DARK_PURPLE + "Decisive Slice").setLore(ChatColor.RESET.toString() + ChatColor.BOLD + ChatColor.of("#0081fa") + "Nebulite", ChatColor.GRAY + "+3 Sharpness", ChatColor.GRAY + "-0.5 Attack Speed", ChatColor.GRAY + "Can be used on Starlight Saber.", ChatColor.RED + "Mutually Exclusive with Flurrying Swings.").setCustomModelData(197).setPersistentData(new NamespacedKey(this.plugin, "is_nebulite"), PersistentDataType.BYTE, (byte) 1).build());
        itemMap.put(CustomItem.NEBULITE_WIDE_SWING, new ItemBuilder(Material.KNOWLEDGE_BOOK).setName(ChatColor.WHITE.toString() + ChatColor.of("#ff9900") + "Wide Swing").setLore(ChatColor.RESET.toString() + ChatColor.BOLD + ChatColor.of("#0081fa") + "Nebulite", ChatColor.GRAY + "+10 Sweeping Edge", ChatColor.GRAY + "Can be used on Starlight Saber.").setCustomModelData(198).setPersistentData(new NamespacedKey(this.plugin, "is_nebulite"), PersistentDataType.BYTE, (byte) 1).build());
        itemMap.put(CustomItem.NEBULITE_REINFORCED_PLATING, new ItemBuilder(Material.KNOWLEDGE_BOOK).setName(ChatColor.WHITE.toString() + ChatColor.of("#5f6d75") + "Reinforced Plating").setLore(ChatColor.RESET.toString() + ChatColor.BOLD + ChatColor.of("#0081fa") + "Nebulite", ChatColor.GRAY + "+3 Protection", ChatColor.GRAY + "-5% Speed", ChatColor.GRAY + "Can be used on Starlight Armor.").setCustomModelData(199).setPersistentData(new NamespacedKey(this.plugin, "is_nebulite"), PersistentDataType.BYTE, (byte) 1).build());
        itemMap.put(CustomItem.NEBULITE_STRONG_STANCE, new ItemBuilder(Material.KNOWLEDGE_BOOK).setName(ChatColor.WHITE.toString() + ChatColor.of("#222a70") + "Strong Stance").setLore(ChatColor.RESET.toString() + ChatColor.BOLD + ChatColor.of("#0081fa") + "Nebulite", ChatColor.GRAY + "+100% Knockback Resistance", ChatColor.GRAY + "-10% Speed", ChatColor.GRAY + "Can be used on Starlight Armor.").setCustomModelData(200).setPersistentData(new NamespacedKey(this.plugin, "is_nebulite"), PersistentDataType.BYTE, (byte) 1).build());
        itemMap.put(CustomItem.NEBULITE_THRUSTER, new ItemBuilder(Material.KNOWLEDGE_BOOK).setName(ChatColor.WHITE.toString() + ChatColor.of("#0dbed9") + "Thruster").setLore(ChatColor.RESET.toString() + ChatColor.BOLD + ChatColor.of("#0081fa") + "Nebulite", ChatColor.GRAY + "Reverses the Speed costs of Plating and Strong Stance.", ChatColor.GRAY + "Consumes Charge when moving around.", ChatColor.GRAY + "Can be used on Starlight Armor.").setCustomModelData(201).setPersistentData(new NamespacedKey(this.plugin, "is_nebulite"), PersistentDataType.BYTE, (byte) 1).build());
        itemMap.put(CustomItem.NEBULITE_OXYGENATOR, new ItemBuilder(Material.KNOWLEDGE_BOOK).setName(ChatColor.WHITE.toString() + ChatColor.of("#0b8de3") + "Oxygenator").setLore(ChatColor.RESET.toString() + ChatColor.BOLD + ChatColor.of("#0081fa") + "Nebulite", ChatColor.GRAY + "+3 Respiration", ChatColor.GRAY + "Adds Aqua Affinity.", ChatColor.GRAY + "Consumes Charge to supply Oxygen if it runs out.", ChatColor.GRAY + "Can be used on Starlight Helmet.").setCustomModelData(202).setPersistentData(new NamespacedKey(this.plugin, "is_nebulite"), PersistentDataType.BYTE, (byte) 1).build());
        itemMap.put(CustomItem.NEBULITE_SMOLDERING_FLAMES, new ItemBuilder(Material.KNOWLEDGE_BOOK).setName(ChatColor.WHITE.toString() + ChatColor.of("#e38a0e") + "Smoldering Flames").setLore(ChatColor.RESET.toString() + ChatColor.BOLD + ChatColor.of("#0081fa") + "Nebulite", ChatColor.GRAY + "+5 Fire Protection", ChatColor.GRAY + "Applies Fire Resistance if on fire under 25% HP.", ChatColor.GRAY + "Consumes Charge to apply Fire Resistance.", ChatColor.GRAY + "Can be used on Starlight Chestplate or Leggings.").setCustomModelData(203).setPersistentData(new NamespacedKey(this.plugin, "is_nebulite"), PersistentDataType.BYTE, (byte) 1).build());
        itemMap.put(CustomItem.NEBULITE_TOXIN_EXPELLER, new ItemBuilder(Material.KNOWLEDGE_BOOK).setName(ChatColor.WHITE.toString() + ChatColor.of("#0a6300") + "Toxin Expeller").setLore(ChatColor.RESET.toString() + ChatColor.BOLD + ChatColor.of("#0081fa") + "Nebulite", ChatColor.GRAY + "Full Corrosive Resistance.", ChatColor.GRAY + "Increased Resistance to Toxicity when swimming.", ChatColor.GRAY + "Consumes Charge when resisting Corrosive or Toxic.", ChatColor.GRAY + "Can be used on Starlight Chestplate or Leggings.").setCustomModelData(204).setPersistentData(new NamespacedKey(this.plugin, "is_nebulite"), PersistentDataType.BYTE, (byte) 1).build());
        itemMap.put(CustomItem.NEBULITE_SHOCK_ABSORBER, new ItemBuilder(Material.KNOWLEDGE_BOOK).setName(ChatColor.WHITE.toString() + ChatColor.of("#72dce8") + "Shock Absorber").setLore(ChatColor.RESET.toString() + ChatColor.BOLD + ChatColor.of("#0081fa") + "Nebulite", ChatColor.GRAY + "Consumes Charge to prevent Fall Damage.", ChatColor.GRAY + "Can be used on Starlight Armor.").setCustomModelData(205).setPersistentData(new NamespacedKey(this.plugin, "is_nebulite"), PersistentDataType.BYTE, (byte) 1).build());
        itemMap.put(CustomItem.NEBULITE_FORCEFIELD, new ItemBuilder(Material.KNOWLEDGE_BOOK).setName(ChatColor.WHITE.toString() + ChatColor.of("#0055ff") + "Forcefield").setLore(ChatColor.RESET.toString() + ChatColor.BOLD + ChatColor.of("#0081fa") + "Nebulite", ChatColor.GRAY + "25% of ignoring entire attacks, inflicts damage onto Charge at 2x rate.", ChatColor.GRAY + "Can be used on Starlight Armor.").setCustomModelData(206).setPersistentData(new NamespacedKey(this.plugin, "is_nebulite"), PersistentDataType.BYTE, (byte) 1).build());
        itemMap.put(CustomItem.NEBULITE_GUARDIAN_ANGEL, new ItemBuilder(Material.KNOWLEDGE_BOOK).setName(ChatColor.YELLOW + "Guardian Angel").setLore(ChatColor.RESET.toString() + ChatColor.BOLD + ChatColor.of("#0081fa") + "Nebulite", ChatColor.GRAY + "Requires Forcefield to be applied on the same item to function.", ChatColor.GRAY + "Ignores all fatal attacks, inflicts damage onto Charge at 20x rate.", ChatColor.GRAY + "Can be used on Starlight Armor.").setCustomModelData(207).setPersistentData(new NamespacedKey(this.plugin, "is_nebulite"), PersistentDataType.BYTE, (byte) 1).build());
        itemMap.put(CustomItem.NEBULITE_RAPID_FIRE, new ItemBuilder(Material.KNOWLEDGE_BOOK).setName(ChatColor.WHITE.toString() + ChatColor.of("#fbff00") + "Rapid Fire").setLore(ChatColor.RESET.toString() + ChatColor.BOLD + ChatColor.of("#0081fa") + "Nebulite", ChatColor.GRAY + "You can now shoot during Cooldown.", ChatColor.GRAY + "Shooting during Cooldown consumes extra Charge.", ChatColor.GRAY + "Can be used on Starlight Blaster.").setCustomModelData(208).setPersistentData(new NamespacedKey(this.plugin, "is_nebulite"), PersistentDataType.BYTE, (byte) 1).build());
        itemMap.put(CustomItem.NEBULITE_SCATTERING_LIGHTS, new ItemBuilder(Material.KNOWLEDGE_BOOK).setName(ChatColor.WHITE.toString() + ChatColor.of("#ff00aa") + "Scattering Lights").setLore(ChatColor.RESET.toString() + ChatColor.BOLD + ChatColor.of("#0081fa") + "Nebulite", ChatColor.GRAY + "Deals damage to surrounding entities.", ChatColor.GRAY + "Consumes more Charge to shoot.", ChatColor.GRAY + "Can be used on Starlight Blaster.", ChatColor.RED + "Mutually Exclusive with Penetrating Beam and Hunter's Eyes.").setCustomModelData(209).setPersistentData(new NamespacedKey(this.plugin, "is_nebulite"), PersistentDataType.BYTE, (byte) 1).build());
        itemMap.put(CustomItem.NEBULITE_PENETRATING_BEAM, new ItemBuilder(Material.KNOWLEDGE_BOOK).setName(ChatColor.WHITE.toString() + ChatColor.of("#d0ff00") + "Penetrating Beam").setLore(ChatColor.RESET.toString() + ChatColor.BOLD + ChatColor.of("#0081fa") + "Nebulite", ChatColor.GRAY + "Passes through entities and damages ones behind them.", ChatColor.GRAY + "Consumes more Charge to shoot.", ChatColor.GRAY + "Can be used on Starlight Blaster.", ChatColor.RED + "Mutually Exclusive with Scattering Lights and Hunter's Eyes.").setCustomModelData(210).setPersistentData(new NamespacedKey(this.plugin, "is_nebulite"), PersistentDataType.BYTE, (byte) 1).build());
        itemMap.put(CustomItem.NEBULITE_HUNTERS_EYES, new ItemBuilder(Material.KNOWLEDGE_BOOK).setName(ChatColor.WHITE.toString() + ChatColor.of("#00b7ff") + "Hunter's Eyes").setLore(ChatColor.RESET.toString() + ChatColor.BOLD + ChatColor.of("#0081fa") + "Nebulite", ChatColor.GRAY + "Shoots through walls. Hit enemies become revealed to you.", ChatColor.GRAY + "Consumes more Charge to shoot.", ChatColor.GRAY + "Can be used on Starlight Blaster.", ChatColor.RED + "Mutually Exclusive with Scattering Lights, Penetrating Beam, and Superheating Laser.", ChatColor.RESET.toString() + ChatColor.of("#00b7ff") + "\"You are the Hunter!\"").setCustomModelData(211).setPersistentData(new NamespacedKey(this.plugin, "is_nebulite"), PersistentDataType.BYTE, (byte) 1).build());
        itemMap.put(CustomItem.NEBULITE_SUPERHEATING_LASER, new ItemBuilder(Material.KNOWLEDGE_BOOK).setName(ChatColor.WHITE.toString() + ChatColor.of("#ff6f00") + "Superheating Laser").setLore(ChatColor.RESET.toString() + ChatColor.BOLD + ChatColor.of("#0081fa") + "Nebulite", ChatColor.GRAY + "Melts and combusts entities and blocks.", ChatColor.GRAY + "Consumes more Charge to shoot.", ChatColor.GRAY + "Can be used on Starlight Blaster.", ChatColor.RED + "Mutually Exclusive with Hunter's Eyes.").setCustomModelData(212).setPersistentData(new NamespacedKey(this.plugin, "is_nebulite"), PersistentDataType.BYTE, (byte) 1).build());
        itemMap.put(CustomItem.NEBULITE_LIGHTSPEED_PROPULSORS, new ItemBuilder(Material.KNOWLEDGE_BOOK).setName(ChatColor.WHITE.toString() + ChatColor.of("#75d8ff") + "Lightspeed Propulsors").setLore(ChatColor.RESET.toString() + ChatColor.BOLD + ChatColor.of("#0081fa") + "Nebulite", ChatColor.GRAY + "+5 Efficiency", ChatColor.GRAY + "Fortune and Silk Touch will not work on ores.", ChatColor.GRAY + "Can be used on Starlight Paxel.", ChatColor.RED + "Mutually Exclusive with BIG SMASH.").setCustomModelData(213).setPersistentData(new NamespacedKey(this.plugin, "is_nebulite"), PersistentDataType.BYTE, (byte) 1).build());
        itemMap.put(CustomItem.NEBULITE_MOLECULAR_PRESERVATION, new ItemBuilder(Material.KNOWLEDGE_BOOK).setName(ChatColor.WHITE.toString() + ChatColor.of("#a42eff") + "Molecular Preservation").setLore(ChatColor.RESET.toString() + ChatColor.BOLD + ChatColor.of("#0081fa") + "Nebulite", ChatColor.GRAY + "Substitutes Fortune for Silk Touch.", ChatColor.GRAY + "Can be used on Starlight Paxel.").setCustomModelData(214).setPersistentData(new NamespacedKey(this.plugin, "is_nebulite"), PersistentDataType.BYTE, (byte) 1).build());
        itemMap.put(CustomItem.NEBULITE_BIG_SMASH, new ItemBuilder(Material.KNOWLEDGE_BOOK).setName(ChatColor.WHITE.toString() + ChatColor.of("#058f00") + "BIG SMASH").setLore(ChatColor.RESET.toString() + ChatColor.BOLD + ChatColor.of("#0081fa") + "Nebulite", ChatColor.GRAY + "Digs in a 3x3 pattern.", ChatColor.GRAY + "-2 Efficiency", ChatColor.GRAY + "Can be used on Starlight Paxel.", ChatColor.RED + "Mutually Exclusive with Decisive Disintegration and Lightspeed Propulsors.").setCustomModelData(215).setPersistentData(new NamespacedKey(this.plugin, "is_nebulite"), PersistentDataType.BYTE, (byte) 1).build());
        itemMap.put(CustomItem.NEBULITE_DECISIVE_DISINTEGRATION, new ItemBuilder(Material.KNOWLEDGE_BOOK).setName(ChatColor.WHITE.toString() + ChatColor.of("#6200ff") + "Decisive Disintegration").setLore(ChatColor.RESET.toString() + ChatColor.BOLD + ChatColor.of("#0081fa") + "Nebulite", ChatColor.GRAY + "Adds Tree Feller / Vein Miner.", ChatColor.GRAY + "Can be used on Starlight Paxel.", ChatColor.RED + "Mutually Exclusive with BIG SMASH.").setCustomModelData(216).setPersistentData(new NamespacedKey(this.plugin, "is_nebulite"), PersistentDataType.BYTE, (byte) 1).build());
        itemMap.put(CustomItem.NEBULITE_HARDENED_DEFENSE, new ItemBuilder(Material.KNOWLEDGE_BOOK).setName(ChatColor.WHITE.toString() + ChatColor.of("#537572") + "Hardened Defense").setLore(ChatColor.RESET.toString() + ChatColor.BOLD + ChatColor.of("#0081fa") + "Nebulite", ChatColor.GRAY + "Acts like a Vanilla shield and always cancels damage.", ChatColor.GRAY + "Weight Increases to Iron.", ChatColor.GRAY + "Can be used on Starlight Shield.").setCustomModelData(217).setPersistentData(new NamespacedKey(this.plugin, "is_nebulite"), PersistentDataType.BYTE, (byte) 1).build());
        itemMap.put(CustomItem.NEBULITE_REFLECTOR, new ItemBuilder(Material.KNOWLEDGE_BOOK).setName(ChatColor.WHITE.toString() + ChatColor.of("#b0f047") + "Reflector").setLore(ChatColor.RESET.toString() + ChatColor.BOLD + ChatColor.of("#0081fa") + "Nebulite", ChatColor.GRAY + "Reflects projectiles back.", ChatColor.GRAY + "Consumes Charge when Reflecting.", ChatColor.GRAY + "Can be used on Starlight Shield.", ChatColor.RED + "Mutually Exclusive with Energy Converter.").setCustomModelData(218).setPersistentData(new NamespacedKey(this.plugin, "is_nebulite"), PersistentDataType.BYTE, (byte) 1).build());
        itemMap.put(CustomItem.NEBULITE_ENERGY_CONVERTER, new ItemBuilder(Material.KNOWLEDGE_BOOK).setName(ChatColor.WHITE.toString() + ChatColor.of("#2bffea") + "Energy Converter").setLore(ChatColor.RESET.toString() + ChatColor.BOLD + ChatColor.of("#0081fa") + "Nebulite", ChatColor.GRAY + "Projectiles are absorbed as energy for the Shield.", ChatColor.GRAY + "Can be used on Starlight Shield.", ChatColor.RED + "Mutually Exclusive with Reflector.").setCustomModelData(219).setPersistentData(new NamespacedKey(this.plugin, "is_nebulite"), PersistentDataType.BYTE, (byte) 1).build());
        itemMap.put(CustomItem.NEBULITE_PROPULSION_BASH, new ItemBuilder(Material.KNOWLEDGE_BOOK).setName(ChatColor.WHITE.toString() + ChatColor.of("#ff001e") + "Propulsion Bash").setLore(ChatColor.RESET.toString() + ChatColor.BOLD + ChatColor.of("#0081fa") + "Nebulite", ChatColor.GRAY + "Double shift while blocking to charge forwards.", ChatColor.GRAY + "Propulsion Bash deals damage to entities in front of you.", ChatColor.GRAY + "Consumes Charge when using Bash.", ChatColor.GRAY + "Can be used on Starlight Shield.").setCustomModelData(220).setPersistentData(new NamespacedKey(this.plugin, "is_nebulite"), PersistentDataType.BYTE, (byte) 1).build());
        itemMap.put(CustomItem.NEBULITE_COUNTERATTACK, new ItemBuilder(Material.KNOWLEDGE_BOOK).setName(ChatColor.WHITE.toString() + ChatColor.of("#db2121") + "Counterattack").setLore(ChatColor.RESET.toString() + ChatColor.BOLD + ChatColor.of("#0081fa") + "Nebulite", ChatColor.GRAY + "Blocking an attack very quickly gives you temporary Strength to land a hard hit.", ChatColor.GRAY + "Consumes Charge when countering.", ChatColor.GRAY + "Can be used on Starlight Shield.").setCustomModelData(221).setPersistentData(new NamespacedKey(this.plugin, "is_nebulite"), PersistentDataType.BYTE, (byte) 1).build());
        itemMap.put(CustomItem.NEBULITE_SHIELD_THRUSTER, new ItemBuilder(Material.KNOWLEDGE_BOOK).setName(ChatColor.WHITE.toString() + ChatColor.of("#3ba3ff") + "Shield Thruster").setLore(ChatColor.RESET.toString() + ChatColor.BOLD + ChatColor.of("#0081fa") + "Nebulite", ChatColor.GRAY + "Shield no longer has any weight.", ChatColor.GRAY + "While blocking, your speed is increased.", ChatColor.GRAY + "Consumes Charge when moving around.", ChatColor.GRAY + "Can be used on Starlight Shield.").setCustomModelData(222).setPersistentData(new NamespacedKey(this.plugin, "is_nebulite"), PersistentDataType.BYTE, (byte) 1).build());

        itemMap.put(CustomItem.ARTIFACT_TENACIOUS_TRICKERY, new ItemBuilder(Material.KNOWLEDGE_BOOK).setName(ChatColor.RESET.toString() + ChatColor.of("#314966") + "Tenacious Trickery").setLore(ChatColor.RESET.toString() + ChatColor.of("#6b03fc") + "Artifact" + ChatColor.DARK_GRAY + " | " + ChatColor.DARK_PURPLE + "All Void Items", ChatColor.GRAY + "Redirect durability loss to Mana if Mana is high.").setCustomModelData(234).setPersistentData(new NamespacedKey(this.plugin, "is_artifact"), PersistentDataType.BYTE, (byte) 1).build());


        itemMap.put(CustomItem.ARTIFACT_ECLIPSED_SHADOWS, new ItemBuilder(Material.KNOWLEDGE_BOOK).setName(ChatColor.RESET.toString() + ChatColor.of("#5109eb") + "Eclipsed Shadows").setLore(ChatColor.RESET.toString() + ChatColor.of("#6b03fc") + "Artifact" + ChatColor.DARK_GRAY + " | " + ChatColor.DARK_PURPLE + "Void Armor", ChatColor.GRAY + "Become invisible and fast when sneaking. Hides armor.", ChatColor.GRAY + "Mobs can't see you unless you hold out items or get too close.", ChatColor.GRAY + "You can't mine or attack when invisible.", ChatColor.GRAY + "Costs " + this.plugin.getOptionsConfig().getInt("hardmode_values.artifact_costs.eclipsed_shadows") + " Mana per use.").setCustomModelData(234).setPersistentData(new NamespacedKey(this.plugin, "is_artifact"), PersistentDataType.BYTE, (byte) 1).build());
        itemMap.put(CustomItem.ARTIFACT_MANA_WARDING, new ItemBuilder(Material.KNOWLEDGE_BOOK).setName(ChatColor.RESET.toString() + ChatColor.of("#1c73ed") + "Mana Warding").setLore(ChatColor.RESET.toString() + ChatColor.of("#6b03fc") + "Artifact" + ChatColor.DARK_GRAY + " | " + ChatColor.DARK_PURPLE + "Void Armor", ChatColor.GRAY + "75% of all damage is absorbed by Mana at a 10x rate.").setCustomModelData(234).setPersistentData(new NamespacedKey(this.plugin, "is_artifact"), PersistentDataType.BYTE, (byte) 1).build());
        itemMap.put(CustomItem.ARTIFACT_FLEETING_SPIRITS, new ItemBuilder(Material.KNOWLEDGE_BOOK).setName(ChatColor.RESET.toString() + ChatColor.of("#594bd1") + "Fleeting Spirits").setLore(ChatColor.RESET.toString() + ChatColor.of("#6b03fc") + "Artifact" + ChatColor.DARK_GRAY + " | " + ChatColor.DARK_PURPLE + "Void Armor", ChatColor.GRAY + "Fatal or powerful hits can trigger Displace to bring you to safety.", ChatColor.GRAY + "If you are hit by a mob, it spawns a Vindicator in your place.", ChatColor.GRAY + "Costs " + (this.plugin.getOptionsConfig().getInt("spell_costs.displace_mana_cost") * 4) + " Mana.").setCustomModelData(234).setPersistentData(new NamespacedKey(this.plugin, "is_artifact"), PersistentDataType.BYTE, (byte) 1).build());

        itemMap.put(CustomItem.ARTIFACT_CONVERGING_SWINGS, new ItemBuilder(Material.KNOWLEDGE_BOOK).setName(ChatColor.RESET.toString() + ChatColor.of("#4b0091") + "Converging Swings").setLore(ChatColor.RESET.toString() + ChatColor.of("#6b03fc") + "Artifact" + ChatColor.DARK_GRAY + " | " + ChatColor.DARK_PURPLE + "Void Blade", ChatColor.GRAY + "Missed swings send out a particle that warps entities to you.", ChatColor.GRAY + "You can control this particle slightly by moving around your cursor.", ChatColor.GRAY + "Costs " + this.plugin.getOptionsConfig().getInt("hardmode_values.artifact_costs.converging_swings") + " Mana.").setCustomModelData(235).setPersistentData(new NamespacedKey(this.plugin, "is_artifact"), PersistentDataType.BYTE, (byte) 1).build());
        itemMap.put(CustomItem.ARTIFACT_TRAVELING_BLADES, new ItemBuilder(Material.KNOWLEDGE_BOOK).setName(ChatColor.RESET.toString() + ChatColor.of("#bfbfbf") + "Traveling Blades").setLore(ChatColor.RESET.toString() + ChatColor.of("#6b03fc") + "Artifact" + ChatColor.DARK_GRAY + " | " + ChatColor.DARK_PURPLE + "Void Blade", ChatColor.GRAY + "Swings send out slashes and further damage entities.", ChatColor.GRAY + "Costs " + this.plugin.getOptionsConfig().getInt("hardmode_values.artifact_costs.travelling_blades") + " Mana.").setCustomModelData(235).setPersistentData(new NamespacedKey(this.plugin, "is_artifact"), PersistentDataType.BYTE, (byte) 1).build());
        itemMap.put(CustomItem.ARTIFACT_HASTE_WIND, new ItemBuilder(Material.KNOWLEDGE_BOOK).setName(ChatColor.RESET.toString() + ChatColor.of("#75c6ff") + "Haste Wind").setLore(ChatColor.RESET.toString() + ChatColor.of("#6b03fc") + "Artifact" + ChatColor.DARK_GRAY + " | " + ChatColor.DARK_PURPLE + "Void Blade", ChatColor.GRAY + "Removes attack cooldown, reduces damage.", ChatColor.GRAY + "Enemies are knocked back further.").setCustomModelData(235).setPersistentData(new NamespacedKey(this.plugin, "is_artifact"), PersistentDataType.BYTE, (byte) 1).build());
        itemMap.put(CustomItem.ARTIFACT_BLOODSAPPING_BAYONET, new ItemBuilder(Material.KNOWLEDGE_BOOK).setName(ChatColor.RESET.toString() + ChatColor.of("#b50c00") + "Bloodsapping Bayonet").setLore(ChatColor.RESET.toString() + ChatColor.of("#6b03fc") + "Artifact" + ChatColor.DARK_GRAY + " | " + ChatColor.DARK_PURPLE + "Void Blade", ChatColor.GRAY + "Heal some of the damage you deal.", ChatColor.GRAY + "If paired with the Bloodsapping Bow, doubles the yield.").setCustomModelData(235).setPersistentData(new NamespacedKey(this.plugin, "is_artifact"), PersistentDataType.BYTE, (byte) 1).build());

        itemMap.put(CustomItem.ARTIFACT_SIGHT_STEALING, new ItemBuilder(Material.KNOWLEDGE_BOOK).setName(ChatColor.BLUE + "Sight Stealing").setLore(ChatColor.RESET.toString() + ChatColor.of("#6b03fc") + "Artifact" + ChatColor.DARK_GRAY + " | " + ChatColor.DARK_PURPLE + "Void Bow", ChatColor.GRAY + "You can see hit entities through walls,", ChatColor.GRAY + "and they're blinded whilst glowing.").setCustomModelData(237).setPersistentData(new NamespacedKey(this.plugin, "is_artifact"), PersistentDataType.BYTE, (byte) 1).build());
        itemMap.put(CustomItem.ARTIFACT_BLOODSAPPING_BOW, new ItemBuilder(Material.KNOWLEDGE_BOOK).setName(ChatColor.RESET.toString() + ChatColor.of("#91001f") + "Bloodsapping Bow").setLore(ChatColor.RESET.toString() + ChatColor.of("#6b03fc") + "Artifact" + ChatColor.DARK_GRAY + " | " + ChatColor.DARK_PURPLE + "Void Bow", ChatColor.GRAY + "Arrows convert damage into Mana and returns it to you.", ChatColor.GRAY + "If paired with the Bloodsapping Bayonet, it doubles the Mana yield.").setCustomModelData(237).setPersistentData(new NamespacedKey(this.plugin, "is_artifact"), PersistentDataType.BYTE, (byte) 1).build());
        itemMap.put(CustomItem.ARTIFACT_SUMMONERS_RIFT, new ItemBuilder(Material.KNOWLEDGE_BOOK).setName(ChatColor.RESET.toString() + ChatColor.of("#1f2e28") + "Summoner’s Rift").setLore(ChatColor.RESET.toString() + ChatColor.of("#6b03fc") + "Artifact" + ChatColor.DARK_GRAY + " | " + ChatColor.DARK_PURPLE + "Void Bow", ChatColor.GRAY + "Shoot out multiple arrows at a time.", ChatColor.GRAY + "Every arrow that hits an entity summons a Vindicator, targeted to them.").setCustomModelData(237).setPersistentData(new NamespacedKey(this.plugin, "is_artifact"), PersistentDataType.BYTE, (byte) 1).build());

        itemMap.put(CustomItem.ARTIFACT_EMANCIPATED_EYES, new ItemBuilder(Material.KNOWLEDGE_BOOK).setName(ChatColor.RESET.toString() + ChatColor.of("#5cb6ff") + "Emancipated Eyes").setLore(ChatColor.RESET.toString() + ChatColor.of("#6b03fc") + "Artifact" + ChatColor.DARK_GRAY + " | " + ChatColor.DARK_PURPLE + "Void Tools", ChatColor.GRAY + "Sneak and mine blocks with Enhanced Eyes out to activate it", ChatColor.GRAY + "on the 25 blocks behind it, and all their adjacent blocks.").setCustomModelData(236).setPersistentData(new NamespacedKey(this.plugin, "is_artifact"), PersistentDataType.BYTE, (byte) 1).build());
        itemMap.put(CustomItem.ARTIFACT_DIGGING_DOPPELGANGER, new ItemBuilder(Material.KNOWLEDGE_BOOK).setName(ChatColor.RESET.toString() + ChatColor.of("#311e47") + "Digging Doppelganger").setLore(ChatColor.RESET.toString() + ChatColor.of("#6b03fc") + "Artifact" + ChatColor.DARK_GRAY + " | " + ChatColor.DARK_PURPLE + "Void Tools", ChatColor.GRAY + "Sneak and mine blocks with Possession out to summon a clone", ChatColor.GRAY + "that mines in a straight line for 25 blocks.").setCustomModelData(236).setPersistentData(new NamespacedKey(this.plugin, "is_artifact"), PersistentDataType.BYTE, (byte) 1).build());

        itemMap.put(CustomItem.ARTIFACT_UNDISPLACE, new ItemBuilder(Material.KNOWLEDGE_BOOK).setName(ChatColor.RESET.toString() + ChatColor.of("#ccff00") + "Undisplace").setLore(ChatColor.RESET.toString() + ChatColor.of("#6b03fc") + "Artifact" + ChatColor.DARK_GRAY + " | " + ChatColor.LIGHT_PURPLE + "Displace", ChatColor.GRAY + "Put down a Displace marker where you were when you teleport.").setCustomModelData(223).setPersistentData(new NamespacedKey(this.plugin, "is_artifact"), PersistentDataType.BYTE, (byte) 1).build());
        itemMap.put(CustomItem.ARTIFACT_MOMENTOUS_MOMENTUM, new ItemBuilder(Material.KNOWLEDGE_BOOK).setName(ChatColor.RESET.toString() + ChatColor.of("#ffa600") + "Momentous Momentum").setLore(ChatColor.RESET.toString() + ChatColor.of("#6b03fc") + "Artifact" + ChatColor.DARK_GRAY + " | " + ChatColor.LIGHT_PURPLE + "Displace", ChatColor.GRAY + "For a very short period of time after using Displace,", ChatColor.GRAY + "hit at full attack charge to deal extra damage and send target flying.").setCustomModelData(223).setPersistentData(new NamespacedKey(this.plugin, "is_artifact"), PersistentDataType.BYTE, (byte) 1).build());
        itemMap.put(CustomItem.ARTIFACT_DISTRACTING_DOPPELGANGER, new ItemBuilder(Material.KNOWLEDGE_BOOK).setName(ChatColor.RESET.toString() + ChatColor.of("#60009c") + "Distracting Doppelganger").setLore(ChatColor.RESET.toString() + ChatColor.of("#6b03fc") + "Artifact" + ChatColor.DARK_GRAY + " | " + ChatColor.LIGHT_PURPLE + "Displace", ChatColor.GRAY + "After teleporting, put down a clone where you were.", ChatColor.GRAY + "This clone hits and distracts enemies.").setCustomModelData(223).setPersistentData(new NamespacedKey(this.plugin, "is_artifact"), PersistentDataType.BYTE, (byte) 1).build());
        itemMap.put(CustomItem.ARTIFACT_SOUL_HEIST, new ItemBuilder(Material.KNOWLEDGE_BOOK).setName(ChatColor.RESET.toString() + ChatColor.of("#8b00c7") + "Soul Heist").setLore(ChatColor.RESET.toString() + ChatColor.of("#6b03fc") + "Artifact" + ChatColor.DARK_GRAY + " | " + ChatColor.GRAY + "Withdraw", ChatColor.GRAY + "Aim at entities to pull them into the Withdraw world.", ChatColor.GRAY + "Non-boss entities cannot move.", ChatColor.GRAY + "Other players with access to Withdraw are immune to this.").setCustomModelData(223).setPersistentData(new NamespacedKey(this.plugin, "is_artifact"), PersistentDataType.BYTE, (byte) 1).build());
        itemMap.put(CustomItem.ARTIFACT_TEMPORAL_SUSPENSION, new ItemBuilder(Material.KNOWLEDGE_BOOK).setName(ChatColor.RESET.toString() + ChatColor.of("#00217a") + "Temporal Suspension").setLore(ChatColor.RESET.toString() + ChatColor.of("#6b03fc") + "Artifact" + ChatColor.DARK_GRAY + " | " + ChatColor.GRAY + "Withdraw Override", ChatColor.GRAY + "Stop Time in your current chunk for 20 seconds.", ChatColor.GRAY + "You can move freely, but cannot leave the chunk.", "", ChatColor.GRAY + "After time resumes, your Mana is set to 0,", ChatColor.GRAY + "regen cooldown is extended,", ChatColor.GRAY + "and Mana Potions cannot be used for a while.").setCustomModelData(223).setPersistentData(new NamespacedKey(this.plugin, "is_artifact"), PersistentDataType.BYTE, (byte) 1).build());
        itemMap.put(CustomItem.ARTIFACT_DIRECTIONAL_VISION, new ItemBuilder(Material.KNOWLEDGE_BOOK).setName(ChatColor.RESET.toString() + ChatColor.of("#0044ff") + "Directional Vision").setLore(ChatColor.RESET.toString() + ChatColor.of("#6b03fc") + "Artifact" + ChatColor.DARK_GRAY + " | " + ChatColor.BLUE + "Enhanced Eyes", ChatColor.GRAY + "Instead of seeing around you, shoot out a directional ray of \"seeing\".").setCustomModelData(223).setPersistentData(new NamespacedKey(this.plugin, "is_artifact"), PersistentDataType.BYTE, (byte) 1).build());
        itemMap.put(CustomItem.ARTIFACT_FORESIGHT, new ItemBuilder(Material.KNOWLEDGE_BOOK).setName(ChatColor.RESET.toString() + ChatColor.of("#005c9e") + "Foresight").setLore(ChatColor.RESET.toString() + ChatColor.of("#6b03fc") + "Artifact" + ChatColor.DARK_GRAY + " | " + ChatColor.BLUE + "Enhanced Eyes Override", ChatColor.GRAY + "Exit your body and fly around freely.").setCustomModelData(223).setPersistentData(new NamespacedKey(this.plugin, "is_artifact"), PersistentDataType.BYTE, (byte) 1).build());
        itemMap.put(CustomItem.ARTIFACT_CHEAP_SIGHT, new ItemBuilder(Material.KNOWLEDGE_BOOK).setName(ChatColor.RESET.toString() + ChatColor.of("#00ad03") + "Cheap Sight").setLore(ChatColor.RESET.toString() + ChatColor.of("#6b03fc") + "Artifact" + ChatColor.DARK_GRAY + " | " + ChatColor.BLUE + "Enhanced Eyes", ChatColor.GRAY + "Removes the upfront Mana cost.").setCustomModelData(223).setPersistentData(new NamespacedKey(this.plugin, "is_artifact"), PersistentDataType.BYTE, (byte) 1).build());
        itemMap.put(CustomItem.ARTIFACT_ADAPTIVE_EXPLOITATION, new ItemBuilder(Material.KNOWLEDGE_BOOK).setName(ChatColor.RESET.toString() + ChatColor.of("#64a326") + "Adaptive Exploitation").setLore(ChatColor.RESET.toString() + ChatColor.of("#6b03fc") + "Artifact" + ChatColor.DARK_GRAY + " | " + ChatColor.GREEN + "Possession", ChatColor.GRAY + "Mimic the functions of the Entity you possess.").setCustomModelData(223).setPersistentData(new NamespacedKey(this.plugin, "is_artifact"), PersistentDataType.BYTE, (byte) 1).build());
        itemMap.put(CustomItem.ARTIFACT_SAFEGUARD, new ItemBuilder(Material.KNOWLEDGE_BOOK).setName(ChatColor.RESET.toString() + ChatColor.of("#ffff00") + "Safeguard").setLore(ChatColor.RESET.toString() + ChatColor.of("#6b03fc") + "Artifact" + ChatColor.DARK_GRAY + " | " + ChatColor.GREEN + "Possession", ChatColor.GRAY + "If you die in Possession, you are always returned to your body unharmed.").setCustomModelData(223).setPersistentData(new NamespacedKey(this.plugin, "is_artifact"), PersistentDataType.BYTE, (byte) 1).build());
        itemMap.put(CustomItem.ARTIFACT_INSPIRE, new ItemBuilder(Material.KNOWLEDGE_BOOK).setName(ChatColor.RESET.toString() + ChatColor.of("#f6116c") + "Inspire").setLore(ChatColor.RESET.toString() + ChatColor.of("#6b03fc") + "Artifact" + ChatColor.DARK_GRAY + " | " + ChatColor.GREEN + "Possession Override", ChatColor.GRAY + "Turn entities into your minion.", ChatColor.GRAY + "It follows you for a while and attacks", ChatColor.GRAY + "anything you attack before disappearing.").setCustomModelData(223).setPersistentData(new NamespacedKey(this.plugin, "is_artifact"), PersistentDataType.BYTE, (byte) 1).build());
        itemMap.put(CustomItem.ARTIFACT_DOMINO, new ItemBuilder(Material.KNOWLEDGE_BOOK).setName(ChatColor.RESET.toString() + ChatColor.of("#ffbb00") + "Domino").setLore(ChatColor.RESET.toString() + ChatColor.of("#6b03fc") + "Artifact" + ChatColor.DARK_GRAY + " | " + ChatColor.GREEN + "Possession Override", ChatColor.GRAY + "Link up to 5 entities together and damage them all at the same time.").setCustomModelData(223).setPersistentData(new NamespacedKey(this.plugin, "is_artifact"), PersistentDataType.BYTE, (byte) 1).build());
        itemMap.put(CustomItem.ARTIFACT_TRIPLE_JUMP, new ItemBuilder(Material.KNOWLEDGE_BOOK).setName(ChatColor.RESET.toString() + ChatColor.of("#70c0cf") + "Triple Jump").setLore(ChatColor.RESET.toString() + ChatColor.of("#6b03fc") + "Artifact" + ChatColor.DARK_GRAY + " | " + ChatColor.AQUA + "Agility", ChatColor.GRAY + "You can jump three times now.").setCustomModelData(223).setPersistentData(new NamespacedKey(this.plugin, "is_artifact"), PersistentDataType.BYTE, (byte) 1).build());
        itemMap.put(CustomItem.ARTIFACT_RECOVERY_ROLL, new ItemBuilder(Material.KNOWLEDGE_BOOK).setName(ChatColor.RESET.toString() + ChatColor.of("#366f9e") + "Recovery Roll").setLore(ChatColor.RESET.toString() + ChatColor.of("#6b03fc") + "Artifact" + ChatColor.DARK_GRAY + " | " + ChatColor.AQUA + "Agility", ChatColor.GRAY + "Take drastically less fall damage.").setCustomModelData(223).setPersistentData(new NamespacedKey(this.plugin, "is_artifact"), PersistentDataType.BYTE, (byte) 1).build());
        itemMap.put(CustomItem.ARTIFACT_SHADOWSTEP, new ItemBuilder(Material.KNOWLEDGE_BOOK).setName(ChatColor.RESET.toString() + ChatColor.of("#6c1eb0") + "Shadowstep").setLore(ChatColor.RESET.toString() + ChatColor.of("#6b03fc") + "Artifact" + ChatColor.DARK_GRAY + " | " + ChatColor.AQUA + "Agility", ChatColor.GRAY + "Automatically walk up blocks.").setCustomModelData(223).setPersistentData(new NamespacedKey(this.plugin, "is_artifact"), PersistentDataType.BYTE, (byte) 1).build());
        itemMap.put(CustomItem.ARTIFACT_METAPHYSICAL_NOURISHMENT, new ItemBuilder(Material.KNOWLEDGE_BOOK).setName(ChatColor.RESET.toString() + ChatColor.of("#b35e04") + "Metaphysical Nourishment").setLore(ChatColor.RESET.toString() + ChatColor.of("#6b03fc") + "Artifact" + ChatColor.DARK_GRAY + " | " + ChatColor.GOLD + "Endurance", ChatColor.GRAY + "If there's no viable food in your inventory,", ChatColor.GRAY + "sacrifice Mana to feed you.").setCustomModelData(223).setPersistentData(new NamespacedKey(this.plugin, "is_artifact"), PersistentDataType.BYTE, (byte) 1).build());

        itemMap.put(CustomItem.ECLIPSED_SHADOWS, new ItemBuilder(Material.KNOWLEDGE_BOOK).setName(ChatColor.of("#5109eb") + "Eclipsed Shadows").setCustomModelData(229).build());
        itemMap.put(CustomItem.CONVEX_LENS, new ItemBuilder(Material.COMMAND_BLOCK).setName(ChatColor.WHITE + "Convex Lens").setCustomModelData(230).build());
        itemMap.put(CustomItem.MAGNIFYING_GLASS, new ItemBuilder(Material.KNOWLEDGE_BOOK).setName(ChatColor.RESET + "Magnifying Glass").setCustomModelData(231).build());
        itemMap.put(CustomItem.RESEARCH_TABLE, new ItemBuilder(Material.LECTERN).setName(ChatColor.RESET.toString() + ChatColor.of("#03a1fc") + "Research Table").setCustomModelData(232).build());
        itemMap.put(CustomItem.BLUEPRINTS_VOLTSHOCK, new ItemBuilder(Material.KNOWLEDGE_BOOK).setName(ChatColor.RESET.toString() + ChatColor.of("#03a1fc") + "Blueprints").setLore(ChatColor.GRAY + "Voltshock").setCustomModelData(232).build());
        itemMap.put(CustomItem.BLUEPRINTS_TAINTED_POWDER, new ItemBuilder(Material.KNOWLEDGE_BOOK).setName(ChatColor.RESET.toString() + ChatColor.of("#03a1fc") + "Blueprints").setLore(ChatColor.GRAY + "Tainted Powder").setCustomModelData(232).build());
        itemMap.put(CustomItem.BLUEPRINTS_CORROSIVE, new ItemBuilder(Material.KNOWLEDGE_BOOK).setName(ChatColor.RESET.toString() + ChatColor.of("#03a1fc") + "Blueprints").setLore(ChatColor.GRAY + "Corrosive").setCustomModelData(232).build());
        itemMap.put(CustomItem.BLUEPRINTS_RAIN_RESISTANCE, new ItemBuilder(Material.KNOWLEDGE_BOOK).setName(ChatColor.RESET.toString() + ChatColor.of("#03a1fc") + "Blueprints").setLore(ChatColor.GRAY + "Rain Resistance").setCustomModelData(232).build());
        itemMap.put(CustomItem.BLUEPRINTS_DUNGEON_COMPASS, new ItemBuilder(Material.KNOWLEDGE_BOOK).setName(ChatColor.RESET.toString() + ChatColor.of("#03a1fc") + "Blueprints").setLore(ChatColor.GRAY + "Dungeon Compass").setCustomModelData(232).build());
        itemMap.put(CustomItem.BLUEPRINTS_STIM_PACK, new ItemBuilder(Material.KNOWLEDGE_BOOK).setName(ChatColor.RESET.toString() + ChatColor.of("#03a1fc") + "Blueprints").setLore(ChatColor.GRAY + "Stim Pack").setCustomModelData(232).build());
        itemMap.put(CustomItem.ARTIFACT_VOUCHER, new ItemBuilder(Material.PAPER).setName(ChatColor.WHITE + "Artifact Voucher").build());
        itemMap.put(CustomItem.DIMENSIONAL_ANCHOR, new ItemBuilder(Material.KNOWLEDGE_BOOK).setName("§9Dimensional Anchor").setCustomModelData(175).setPersistentData(new NamespacedKey(plugin, "is_dim_anchor"), PersistentDataType.BYTE, (byte) 1).build());

        //starlight armor/tools
        final ItemStack starlight_helmet = new ItemBuilder(Material.NETHERITE_HELMET).setName("§eStarlight Helmet").setLore("§7Charge: 0 / 1000").setCustomModelData(151).addEnchant(Enchantment.PROTECTION_ENVIRONMENTAL, 7, true).addEnchant(Enchantment.DURABILITY, 10, true).setDurabilityDamage(Material.NETHERITE_HELMET.getMaxDurability() - 1).setRepairCost(999999).setPersistentData(new NamespacedKey(this.plugin, "starlight_charge"), PersistentDataType.INTEGER, 0).setPersistentData(new NamespacedKey(this.plugin, "starlight_plating"), PersistentDataType.SHORT, (short) 0).setPersistentData(new NamespacedKey(this.plugin, "starlight_max_charge"), PersistentDataType.INTEGER, 1000).setPersistentData(new NamespacedKey(this.plugin, "is_starlight_armor"), PersistentDataType.BYTE, (byte) 1).setPersistentData(new NamespacedKey(this.plugin, "nebulites"), PersistentDataType.STRING, "").addAttributeModifier(Attribute.GENERIC_ARMOR, new AttributeModifier(UUID.fromString(uuids[6]), "Starlight Base Armor", 5, AttributeModifier.Operation.ADD_NUMBER, EquipmentSlot.HEAD)).addAttributeModifier(Attribute.GENERIC_ARMOR_TOUGHNESS, new AttributeModifier(UUID.fromString(uuids[7]), "Starlight Base Armor Toughness", 3, AttributeModifier.Operation.ADD_NUMBER, EquipmentSlot.HEAD)).build();
        enchantmentStorage.storeEnchantments(starlight_helmet, false);

        final ItemStack starlight_chestplate = new ItemBuilder(Material.NETHERITE_CHESTPLATE).setName("§eStarlight Chestplate").setLore("§7Charge: 0 / 1000").setCustomModelData(152).addEnchant(Enchantment.PROTECTION_ENVIRONMENTAL, 7, true).addEnchant(Enchantment.DURABILITY, 10, true).setDurabilityDamage(Material.NETHERITE_CHESTPLATE.getMaxDurability() - 1).setRepairCost(999999).setPersistentData(new NamespacedKey(this.plugin, "starlight_charge"), PersistentDataType.INTEGER, 0).setPersistentData(new NamespacedKey(this.plugin, "starlight_plating"), PersistentDataType.SHORT, (short) 0).setPersistentData(new NamespacedKey(this.plugin, "starlight_max_charge"), PersistentDataType.INTEGER, 1000).setPersistentData(new NamespacedKey(this.plugin, "is_starlight_armor"), PersistentDataType.BYTE, (byte) 1).setPersistentData(new NamespacedKey(this.plugin, "nebulites"), PersistentDataType.STRING, "").addAttributeModifier(Attribute.GENERIC_ARMOR, new AttributeModifier(UUID.fromString(uuids[8]), "Starlight Base Armor", 10, AttributeModifier.Operation.ADD_NUMBER, EquipmentSlot.CHEST)).addAttributeModifier(Attribute.GENERIC_ARMOR_TOUGHNESS, new AttributeModifier(UUID.fromString(uuids[9]), "Starlight Base Armor Toughness", 3, AttributeModifier.Operation.ADD_NUMBER, EquipmentSlot.CHEST)).build();
        enchantmentStorage.storeEnchantments(starlight_chestplate, false);

        final ItemStack starlight_leggings = new ItemBuilder(Material.NETHERITE_LEGGINGS).setName("§eStarlight Leggings").setLore("§7Charge: 0 / 1000").setCustomModelData(153).addEnchant(Enchantment.PROTECTION_ENVIRONMENTAL, 7, true).addEnchant(Enchantment.DURABILITY, 10, true).setDurabilityDamage(Material.NETHERITE_LEGGINGS.getMaxDurability() - 1).setRepairCost(999999).setPersistentData(new NamespacedKey(this.plugin, "starlight_charge"), PersistentDataType.INTEGER, 0).setPersistentData(new NamespacedKey(this.plugin, "starlight_plating"), PersistentDataType.SHORT, (short) 0).setPersistentData(new NamespacedKey(this.plugin, "starlight_max_charge"), PersistentDataType.INTEGER, 1000).setPersistentData(new NamespacedKey(this.plugin, "is_starlight_armor"), PersistentDataType.BYTE, (byte) 1).setPersistentData(new NamespacedKey(this.plugin, "nebulites"), PersistentDataType.STRING, "").addAttributeModifier(Attribute.GENERIC_ARMOR, new AttributeModifier(UUID.fromString(uuids[10]), "Starlight Base Armor", 6, AttributeModifier.Operation.ADD_NUMBER, EquipmentSlot.LEGS)).addAttributeModifier(Attribute.GENERIC_ARMOR_TOUGHNESS, new AttributeModifier(UUID.fromString(uuids[11]), "Starlight Base Armor Toughness", 3, AttributeModifier.Operation.ADD_NUMBER, EquipmentSlot.LEGS)).build();
        enchantmentStorage.storeEnchantments(starlight_leggings, false);

        final ItemStack starlight_boots = new ItemBuilder(Material.NETHERITE_BOOTS).setName("§eStarlight Boots").setLore("§7Charge: 0 / 1000").setCustomModelData(154).addEnchant(Enchantment.PROTECTION_ENVIRONMENTAL, 7, true).addEnchant(Enchantment.DURABILITY, 10, true).setDurabilityDamage(Material.NETHERITE_BOOTS.getMaxDurability() - 1).setRepairCost(999999).setPersistentData(new NamespacedKey(this.plugin, "starlight_charge"), PersistentDataType.INTEGER, 0).setPersistentData(new NamespacedKey(this.plugin, "starlight_plating"), PersistentDataType.SHORT, (short) 0).setPersistentData(new NamespacedKey(this.plugin, "starlight_max_charge"), PersistentDataType.INTEGER, 1000).setPersistentData(new NamespacedKey(this.plugin, "is_starlight_armor"), PersistentDataType.BYTE, (byte) 1).setPersistentData(new NamespacedKey(this.plugin, "nebulites"), PersistentDataType.STRING, "").addAttributeModifier(Attribute.GENERIC_ARMOR, new AttributeModifier(UUID.fromString(uuids[12]), "Starlight Base Armor", 5, AttributeModifier.Operation.ADD_NUMBER, EquipmentSlot.FEET)).addAttributeModifier(Attribute.GENERIC_ARMOR_TOUGHNESS, new AttributeModifier(UUID.fromString(uuids[13]), "Starlight Base Armor Toughness", 3, AttributeModifier.Operation.ADD_NUMBER, EquipmentSlot.FEET)).build();
        enchantmentStorage.storeEnchantments(starlight_boots, false);

        final ItemStack starlight_saber = new ItemBuilder(Material.NETHERITE_SWORD).setName("§eStarlight Saber").setLore("§7Charge: 0 / 2000").setCustomModelData(163).addEnchant(Enchantment.DAMAGE_ALL, 10, true).addEnchant(Enchantment.DURABILITY, 10, true).setDurabilityDamage(Material.NETHERITE_SWORD.getMaxDurability() - 1).setRepairCost(999999).setPersistentData(new NamespacedKey(this.plugin, "is_starlight_saber"), PersistentDataType.BYTE, (byte) 1).setPersistentData(new NamespacedKey(this.plugin, "starlight_charge"), PersistentDataType.INTEGER, 0).setPersistentData(new NamespacedKey(this.plugin, "starlight_max_charge"), PersistentDataType.INTEGER, 2000).setPersistentData(new NamespacedKey(this.plugin, "saber_cooldown"), PersistentDataType.BYTE, (byte) 0).setPersistentData(new NamespacedKey(this.plugin, "nebulites"), PersistentDataType.STRING, "").build();
        enchantmentStorage.storeEnchantments(starlight_saber, false);

        final ItemStack starlight_shield = new ItemBuilder(Material.SHIELD).setName(ChatColor.YELLOW + "Starlight Shield").setLore("§7Charge: 0 / 2000").setCustomModelData(177).addEnchant(Enchantment.DURABILITY, 10, true).setDurabilityDamage(Material.SHIELD.getMaxDurability() - 1).setRepairCost(999999).setPersistentData(new NamespacedKey(this.plugin, "is_starlight_shield"), PersistentDataType.BYTE, (byte) 1).setPersistentData(new NamespacedKey(this.plugin, "starlight_charge"), PersistentDataType.INTEGER, 0).setPersistentData(new NamespacedKey(this.plugin, "starlight_max_charge"), PersistentDataType.INTEGER, 2000).setPersistentData(new NamespacedKey(this.plugin, "nebulites"), PersistentDataType.STRING, "").addAttributeModifier(Attribute.GENERIC_MOVEMENT_SPEED, new AttributeModifier(UUID.fromString(uuids[16]), "Shield Speed Modifier", -0.1, AttributeModifier.Operation.MULTIPLY_SCALAR_1, EquipmentSlot.OFF_HAND)).addAttributeModifier(Attribute.GENERIC_MOVEMENT_SPEED, new AttributeModifier(UUID.fromString(uuids[17]), "Shield Speed Modifier", -0.1, AttributeModifier.Operation.MULTIPLY_SCALAR_1, EquipmentSlot.HAND)).build();
        enchantmentStorage.storeEnchantments(starlight_shield, false);

        final ItemStack starlight_blaster = new ItemBuilder(Material.CROSSBOW).setName("§eStarlight Blaster").setLore("§7Charge: 0 / 2000").setCustomModelData(164).addItemFlags(ItemFlag.HIDE_ENCHANTS).addEnchant(Enchantment.DURABILITY, 1, true).setDurabilityDamage(Material.CROSSBOW.getMaxDurability() - 1).setRepairCost(999999).setPersistentData(new NamespacedKey(this.plugin, "is_starlight_blaster"), PersistentDataType.BYTE, (byte) 1).setPersistentData(new NamespacedKey(this.plugin, "starlight_charge"), PersistentDataType.INTEGER, 0).setPersistentData(new NamespacedKey(this.plugin, "starlight_max_charge"), PersistentDataType.INTEGER, 2000).setPersistentData(new NamespacedKey(this.plugin, "blaster_cooldown"), PersistentDataType.SHORT, (short) 0).setPersistentData(new NamespacedKey(this.plugin, "nebulites"), PersistentDataType.STRING, "").build();
        enchantmentStorage.storeEnchantments(starlight_blaster, false);

        final ItemStack starlight_paxel = new ItemBuilder(Material.NETHERITE_PICKAXE).setName("§eStarlight Paxel").setLore("§7Charge: 0 / 2000").setCustomModelData(165).addItemFlags(ItemFlag.HIDE_ATTRIBUTES).addEnchant(Enchantment.DIG_SPEED, 5, true).addEnchant(Enchantment.LOOT_BONUS_BLOCKS, 5, true).addEnchant(Enchantment.DURABILITY, 10, true).setDurabilityDamage(Material.NETHERITE_PICKAXE.getMaxDurability() - 1).setRepairCost(999999).setPersistentData(new NamespacedKey(this.plugin, "is_starlight_paxel"), PersistentDataType.BYTE, (byte) 1).setPersistentData(new NamespacedKey(this.plugin, "starlight_charge"), PersistentDataType.INTEGER, 0).setPersistentData(new NamespacedKey(this.plugin, "starlight_max_charge"), PersistentDataType.INTEGER, 2000).setPersistentData(new NamespacedKey(this.plugin, "nebulites"), PersistentDataType.STRING, "").addAttributeModifier(Attribute.GENERIC_ATTACK_DAMAGE, new AttributeModifier(UUID.fromString(uuids[14]), "Starlight Paxel No Damage", -999999, AttributeModifier.Operation.ADD_NUMBER, EquipmentSlot.HAND)).addAttributeModifier(Attribute.GENERIC_ATTACK_SPEED, new AttributeModifier(UUID.fromString(uuids[15]), "Starlight Paxel Instant Raise", 999999, AttributeModifier.Operation.ADD_NUMBER, EquipmentSlot.HAND)).build();
        enchantmentStorage.storeEnchantments(starlight_paxel, false);

        final ItemStack starlight_sentry = new ItemBuilder(Material.FISHING_ROD).setName(ChatColor.YELLOW + "Starlight Sentry").setLore("§7Charge: 0 / 2000").setCustomModelData(184).addItemFlags(ItemFlag.HIDE_ENCHANTS).addEnchant(Enchantment.DURABILITY, 1, true).setDurabilityDamage(Material.FISHING_ROD.getMaxDurability() - 1).setRepairCost(999999).setPersistentData(new NamespacedKey(this.plugin, "is_starlight_sentry"), PersistentDataType.BYTE, (byte) 1).setPersistentData(new NamespacedKey(this.plugin, "starlight_charge"), PersistentDataType.INTEGER, 0).setPersistentData(new NamespacedKey(this.plugin, "starlight_max_charge"), PersistentDataType.INTEGER, 2000).setPersistentData(new NamespacedKey(this.plugin, "nebulites"), PersistentDataType.STRING, "").build();
        enchantmentStorage.storeEnchantments(starlight_sentry, false);

        itemMap.put(CustomItem.STARLIGHT_HELMET, starlight_helmet);
        itemMap.put(CustomItem.STARLIGHT_CHESTPLATE, starlight_chestplate);
        itemMap.put(CustomItem.STARLIGHT_LEGGINGS, starlight_leggings);
        itemMap.put(CustomItem.STARLIGHT_BOOTS, starlight_boots);
        itemMap.put(CustomItem.STARLIGHT_SABER, starlight_saber);
        itemMap.put(CustomItem.STARLIGHT_SHIELD, starlight_shield);
        itemMap.put(CustomItem.STARLIGHT_BLASTER, starlight_blaster);
        itemMap.put(CustomItem.STARLIGHT_PAXEL, starlight_paxel);
        itemMap.put(CustomItem.STARLIGHT_SENTRY, starlight_sentry);

        //voidmatter armor/tools
        final ItemStack voidmatter_helmet = new ItemBuilder(Material.NETHERITE_HELMET).setName("§5Void Mask").setLore("§7Set Effect: 2x Mana Regeneration").setCustomModelData(159).addEnchant(Enchantment.PROTECTION_ENVIRONMENTAL, 4, true).addEnchant(Enchantment.DURABILITY, 20, true).setRepairCost(999999).setPersistentData(new NamespacedKey(this.plugin, "is_voidmatter_armor"), PersistentDataType.BYTE, (byte) 1).build();
        enchantmentStorage.storeEnchantments(voidmatter_helmet, false);

        final ItemStack voidmatter_chestplate = new ItemBuilder(Material.NETHERITE_CHESTPLATE).setName("§5Void Tunic").setLore("§7Set Effect: 2x Mana Regeneration").setCustomModelData(160).addEnchant(Enchantment.PROTECTION_ENVIRONMENTAL, 4, true).addEnchant(Enchantment.DURABILITY, 20, true).setRepairCost(999999).setPersistentData(new NamespacedKey(this.plugin, "is_voidmatter_armor"), PersistentDataType.BYTE, (byte) 1).build();
        enchantmentStorage.storeEnchantments(voidmatter_chestplate, false);

        final ItemStack voidmatter_leggings = new ItemBuilder(Material.NETHERITE_LEGGINGS).setName("§5Void Slacks").setLore("§7Set Effect: 2x Mana Regeneration").setCustomModelData(161).addEnchant(Enchantment.PROTECTION_ENVIRONMENTAL, 4, true).addEnchant(Enchantment.DURABILITY, 20, true).setRepairCost(999999).setPersistentData(new NamespacedKey(this.plugin, "is_voidmatter_armor"), PersistentDataType.BYTE, (byte) 1).build();
        enchantmentStorage.storeEnchantments(voidmatter_leggings, false);

        final ItemStack voidmatter_boots = new ItemBuilder(Material.NETHERITE_BOOTS).setName("§5Void Boots").setLore("§7Set Effect: 2x Mana Regeneration").setCustomModelData(162).addEnchant(Enchantment.PROTECTION_ENVIRONMENTAL, 4, true).addEnchant(Enchantment.DURABILITY, 20, true).setRepairCost(999999).setPersistentData(new NamespacedKey(this.plugin, "is_voidmatter_armor"), PersistentDataType.BYTE, (byte) 1).build();
        enchantmentStorage.storeEnchantments(voidmatter_boots, false);

        final ItemStack voidmatter_blade = new ItemBuilder(Material.NETHERITE_SWORD).setName("§5Void Blade").setCustomModelData(168).addEnchant(Enchantment.DAMAGE_ALL, 5, true).addEnchant(Enchantment.DURABILITY, 20, true).setRepairCost(999999).setPersistentData(new NamespacedKey(this.plugin, "is_voidmatter_blade"), PersistentDataType.BYTE, (byte) 1).build();
        enchantmentStorage.storeEnchantments(voidmatter_blade, false);

        final ItemStack voidmatter_bow = new ItemBuilder(Material.BOW).setName("§5Void Bow").setCustomModelData(169).addEnchant(Enchantment.ARROW_DAMAGE, 5, true).addEnchant(Enchantment.DURABILITY, 20, true).addEnchant(Enchantment.ARROW_INFINITE, 1, true).setRepairCost(999999).setPersistentData(new NamespacedKey(this.plugin, "is_voidmatter_bow"), PersistentDataType.BYTE, (byte) 1).build();
        enchantmentStorage.storeEnchantments(voidmatter_bow, false);

        final ItemStack voidmatter_pickaxe = new ItemBuilder(Material.NETHERITE_PICKAXE).setName("§5Void Pickaxe").setCustomModelData(170).addEnchant(Enchantment.DIG_SPEED, 5, true).addEnchant(Enchantment.LOOT_BONUS_BLOCKS, 3, true).addEnchant(Enchantment.DURABILITY, 20, true).setRepairCost(999999).setPersistentData(new NamespacedKey(this.plugin, "is_voidmatter_pickaxe"), PersistentDataType.BYTE, (byte) 1).build();
        enchantmentStorage.storeEnchantments(voidmatter_pickaxe, false);

        final ItemStack voidmatter_shovel = new ItemBuilder(Material.NETHERITE_SHOVEL).setName("§5Void Shovel").setCustomModelData(171).addEnchant(Enchantment.DIG_SPEED, 5, true).addEnchant(Enchantment.LOOT_BONUS_BLOCKS, 3, true).addEnchant(Enchantment.DURABILITY, 20, true).setRepairCost(999999).setPersistentData(new NamespacedKey(this.plugin, "is_voidmatter_shovel"), PersistentDataType.BYTE, (byte) 1).build();
        enchantmentStorage.storeEnchantments(voidmatter_shovel, false);

        final ItemStack voidmatter_axe = new ItemBuilder(Material.NETHERITE_AXE).setName("§5Void Axe").setCustomModelData(172).addEnchant(Enchantment.DIG_SPEED, 5, true).addEnchant(Enchantment.LOOT_BONUS_BLOCKS, 3, true).addEnchant(Enchantment.DURABILITY, 20, true).setRepairCost(999999).setPersistentData(new NamespacedKey(this.plugin, "is_voidmatter_axe"), PersistentDataType.BYTE, (byte) 1).build();
        enchantmentStorage.storeEnchantments(voidmatter_axe, false);

        itemMap.put(CustomItem.VOIDMATTER_HELMET, voidmatter_helmet);
        itemMap.put(CustomItem.VOIDMATTER_CHESTPLATE, voidmatter_chestplate);
        itemMap.put(CustomItem.VOIDMATTER_LEGGINGS, voidmatter_leggings);
        itemMap.put(CustomItem.VOIDMATTER_BOOTS, voidmatter_boots);
        itemMap.put(CustomItem.VOIDMATTER_BLADE, voidmatter_blade);
        itemMap.put(CustomItem.VOIDMATTER_BOW, voidmatter_bow);
        itemMap.put(CustomItem.VOIDMATTER_PICKAXE, voidmatter_pickaxe);
        itemMap.put(CustomItem.VOIDMATTER_SHOVEL, voidmatter_shovel);
        itemMap.put(CustomItem.VOIDMATTER_AXE, voidmatter_axe);
    }

    public ItemStack getItem(CustomItem item) {
        return itemMap.get(item).clone();
    }
}